unit DLLsucdapi;


interface

uses
  Windows;

const
  DEVICE_COMMANDOK   = 0;
  DEVICE_IDERROR     = 1;
  DEVICE_BUSY        = 2;
  DEVICE_UNKNOWERROR = 3;

const
  DLLNAME = 'USBCDDLL.DLL';

type
  TCallBackProc = procedure(DeviceCount: Integer); stdcall;

procedure InitUSBCDLibrary; stdcall; external DLLNAME name 'InitUSBCDLibrary';
procedure CloseUSBCDLibrary; stdcall; external DLLNAME name 'CloseUSBCDLibrary';
procedure SetCDCallbackProc(iProc: FARPROC); stdcall; external DLLNAME name 'SetCDCallbackProc';
function GetDeviceNumber: Integer; stdcall; external DLLNAME name 'GetDeviceNumber';
function EnumDevice(iIndex: Integer): Integer; stdcall; external DLLNAME name 'EnumDevice';

// CD Device Operate function below
function USBCDReset(ID: Integer): Integer; stdcall; external DLLNAME name 'USBCDReset';
function USBCDMoveto(ID: Integer; Index: Integer): Integer; stdcall; external DLLNAME name 'USBCDMoveto';
function USBCDGetCDDown(ID: Integer): Integer; stdcall; external DLLNAME name 'USBCDGetCDDown';
function USBCDLEDON(ID: Integer): Integer; stdcall; external DLLNAME name 'USBCDLEDON';
function USBCDLEDOFF(ID: Integer): Integer; stdcall; external DLLNAME name 'USBCDLEDOFF';
function USBCDGetStatus(ID: Integer): Integer; stdcall; external DLLNAME name 'USBCDGetStatus';

implementation

end.
